name: Build and Deploy Node.js App to Azure Web App - echo-ui

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies, Build, and Test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Create Deployment Package (Exclude node_modules)
        run: |
          mkdir deploy
          cp -r $(ls -A | grep -Ev 'node_modules|.git|echo-ui.zip|deploy') deploy/
          cd deploy
          zip -r ../echo-ui.zip .  # Zip only necessary files

      - name: Upload Artifact for Deployment Job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: echo-ui.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for requesting the JWT
      contents: read  # Required for actions/checkout

    steps:
      - name: Download Artifact from Build Job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip Artifact for Deployment
        run: unzip echo-ui.zip -d app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'echo-ui'
          package: app  # Deploy only the extracted files
